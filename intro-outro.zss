[Statedef -2]

	# Sets up some failsafes to break down the moment a character is KO'd from the winposes.	
	# This is redundant and bad, must remove once the main Ikemen repository is fixed.	
	
if roundstate <= 5 {
	mapSet{map: "temp1"; value: 0}
	mapSet{map: "temp2"; value: 0}
	}

	# Tells if a character has been KO'd.
	
if roundstate = 3 {
	mapSet{map: "temp1"; value: 1}
	}
	
	# Tells if a winpose should start.
	
if roundstate = 4 {
	mapSet{map: "temp2"; value: 1}
	}
	
	# Records the gametime as soon as a character has been KO'd.
	
if roundstate < 3 {	
	mapSet{map: "kotemp"; value: gametime}
	}
	
if roundstate < 3 {	
	mapSet{map: "wintemp"; value: 0}
	}
		
if roundstate < 2 {
	# Mutes the music during round one.
	
	if map(io_intro_bgm_r1) && roundno = 1 {
		assertSpecial{flag:nomusic}
		}
	
	# Hides the lifebars on round one.
	
	if map(io_intro_hud_r1) && roundno = 1 {
		assertSpecial{flag:nobardisplay}
		}

	# Hides lifebars on round two onwards.
	
	if map(io_intro_hud_rx) && roundno > 1 {
	assertSpecial{flag:nobardisplay}
		}

	# Mutes the music during intros on turns mode.
	
	if map(io_intro_bgm_tm) && roundno > 1 && teammode = turns && stateno != 0 {
		assertSpecial{flag:nomusic}
		}
	}
	
[Statedef -3]
	
	# Centers camera on the winner or loser  during winposes.
	
Ignorehitpause if ((map(io_win_cam) = 1 && alive) || (map(io_win_cam) = 2 && !alive)) && roundstate = 4 {
	zoom{scale:gamewidth/320.0; lag:0.95; pos:(pos x)/(gamewidth/320.0)*camerazoom, 0}
	}
	
[Statedef -4]
	
	# Change map(temp1) for roundstate = 3 once the main repository is fixed.
	
Ignorehitpause if map(temp1) && alive && teamleader < 3 {

	# Removes the slomo effect on KO.
	
	if map(io_ko_slo) {
		assertSpecial{flag:nokoslow}
		}
	
	# Controls the white and red flashes during a special or super ko, if ko slowdown has been turned off.
	
	if ((map(io_ko_spc) && winspecial) || (map(io_ko_sup) && winhyper)) && map(io_ko_slo) && (gametime - map(kotemp) <= 59) {
			if (gametime - map(kotemp) <= 6) {
				envcolor{value:0,0,0; time:1; under:1}
				}
					else if gametime % 14 < 7 {
						envcolor{value:255,0,0; time:1; under:1}
						}
						else {
							envcolor{value:255,255,255; time:1; under:1}
							}
		}

	# Controls the white and red flashes during a special or super ko, if ko slowdown is still active.
	
	if ((map(io_ko_spc) && winspecial) || (map(io_ko_sup) && winhyper)) && !map(io_ko_slo) && (gametime - map(kotemp) <= 17) {
			if (gametime - map(kotemp) <= 3) {
				envcolor{value:0,0,0; time:1; under:1}
				}
					else if gametime % 4 < 2 {
						envcolor{value:255,0,0; time:1; under:1}
						}
						else {
							envcolor{value:255,255,255; time:1; under:1}
							}
		}
		
	# Mutes the music during KOs.
	
	if map(io_ko_bgm) {
		assertSpecial{flag:nomusic}
		}

	# Hides the lifebars during KOs.
	
	if map(io_ko_hud) {
		assertSpecial{flag:nobardisplay}
		}
	
	}
	
	# Makes intros un-skippable
	# Change !map(temp2) for roundstate = 0 once the main repository is fixed.
	
Ignorehitpause if map(io_intro_skip) && !map(temp2) {
	assertSpecial{flag:roundnotskip}
	}

	# Change map(temp2) for roundstate = 4 once the main repository is fixed.
	
Ignorehitpause if map(temp2) && alive && teamleader < 3 {

	# Makes winposes un-skippable
	
	if map(io_win_skip) {
		assertSpecial{flag:roundnotskip}
		}

	# Mutes the music during winposes.
	
	if map(io_win_bgm) && !map(io_win_fan) {
		assertSpecial{flag:nomusic}
		}
	
	# Hides the lifebars during winposes.
	
	if map(io_win_hud) {
		assertSpecial{flag:nobardisplay}
		}
	
	# Plays a jingle during winposes.
	
	if map(io_win_fan) && !map(wintemp) {
		playbgm{bgm:"data/breakers.wav";loop:0}
		mapAdd{map:"wintemp"; value: 1}
		}	

	}	
